import { string } from 'prop-types';

type  productFeatureIactn  {
    productId:ID!
    productFeatureId:String
    productFeatureIdTo:String
    productFeatureIactnTypeId:String
    lastUpdatedStamp:date
    createdStamp:date
    version:Int
}

type Query {
    countByExample(example:productFeatureIactnExample):Long
    selectByExample(example:productFeatureIactnExample):[productFeatureIactn]
    selectByPrimaryKey(key:productFeatureIactnKey):productFeatureIactn
}

type Mutation{
    insert(record:productFeatureIactn): Int
    insertSelective(record:productFeatureIactn): Int
    updateByPrimaryKey(record:productFeatureIactn): Int
    deleteByPrimaryKey(key:productFeatureIactnKey):Int
}
type productFeatureIactnExample{
    orderByClause:String
    distinct:Boolean
    oredCriteria:[Criteria]
}
type productFeatureIactnKey{
    productId:String
    productFeatureId:String
    productFeatureIdTo:String
}