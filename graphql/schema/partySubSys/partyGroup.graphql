scalar Date

type  partyGroup  {
    partyId: ID! #当事人标识
    groupName: String #组织名称
    groupNameLocal: String #组织名称——本地组织
    officeSiteName: String #办公地点
    annualRevenue: Float #年收入
    numEmployees: Float #员工数量
    tickerSymbol: String #股票代码
    termOfOperationFromDate: date #营业期限开始日期
    termOfOperationThruDate: date #营业期限结束日期
    establishmentDate: date #成立日期
    registeredCapital: Float #注册资本
    numberOfInsuredPersons: Int #参保人数
    comments: String #备注
    logoImageUrl: String #LOGO图URL
    lastUpdatedStamp: date
    createdStamp: date
    version: Int
}
type Query {
    countByInput(example:partyGroupInput):Long
    selectByInput(example:partyGroupInput):[partyGroup]
    selectByPrimaryKey(partyId:String):partyGroup
}
type Mutation{
    insert(record:partyGroup): Int
    insertSelective(record:partyGroup): Int
    updateByPrimaryKey(record:partyGroup): Int
    deleteByPrimaryKey(partyId:String):Int
}
type partyGroupInput{
    orderByClause:String
    distinct:Boolean
    oredCriteria:[Criteria]
}