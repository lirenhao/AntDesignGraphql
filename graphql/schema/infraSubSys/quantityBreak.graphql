scalar Date

type  quantityBreak  {
    quantityBreakId:ID! #数量超出标识
    quantityBreakTypeId:String #数量超出类型标识
    fromQuantity:String #开始数量
    thruQuantity:String #结束数量
    uomId:String
    description:String
    lastUpdatedStamp:Date
    createdStamp:Date
    version:Int
}

type Query {
    countByInput(example:quantityBreakInput):Long
    selectByPrimaryKey(quantityBreakId:String):quantityBreak
    selectByInput(example:quantityBreakInput):[quantityBreak]
}

type Mutation{
    insert(record:quantityBreak): Int
    insertSelective(record:quantityBreak): Int
    updateByPrimaryKey(record:quantityBreak): Int
    deleteByPrimaryKey(quantityBreakId:String):Int
}
type quantityBreakInput{
    orderByClause:String
    distinct:boolean
    oredCriteria:[Criteria]
}