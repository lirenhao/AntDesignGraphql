scalar Date

type  validResponsibility  {
    emplPositionTypeId:ID!  #职位类型
    responsibilityTypeId:String  #职位类型标识
    fromDate:Date #开始时间
    thruDate:Date #结束时间
    comments:String
    lastUpdatedStamp:Date
    createdStamp:Date
    version:Int
}
type Query {
    countByExample(example:validResponsibilityExample):Long
    selectByPrimaryKey(key:validResponsibilityKey):validResponsibility
    selectByExample(example:validResponsibilityExample):[validResponsibility]
}

type Mutation{
    insert(record:validResponsibility):Int
    insertSelective(record:validResponsibility): Int
    updateByPrimaryKey(record:validResponsibility): Int
    deleteByPrimaryKey(key:validResponsibilityKey):Int
}
type validResponsibilityExample{
    orderByClause:String
    distinct:boolean
    oredCriteria:[Criteria]
}

type validResponsibilityKey{
    emplPositionTypeId:String!
    responsibilityTypeId:String!
    fromDate:Date!
}