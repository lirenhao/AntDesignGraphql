scalar Date

type  employment  {
    partyIdFrom:ID!
    partyIdTo:String
    roleTypeIdFrom:String  #源角色类型标识
    roleTypeIdTo:String  #目标角色类型标识
    fromDate:Date #起始日期
    thruDate:Date  #终止日期
    termination_reason_id:String  #终止原因标识
    termination_type_id:String #终止类型标识
    lastUpdatedStamp:Date
    createdStamp:Date
    version:Int
}

type Query {
    selectByPrimaryKey(key:employmentKey):deliverableType
    selectByInput(example:employmentInput):[employment]
    countByInput(example:employmentInput):Long
}
    type Mutation{
        insert(record:employment): Int
        insertSelective(record:employment): Int
        updateByPrimaryKey(record:employment): Int
        deleteByPrimaryKey(key:employmentKey):Int
    }
    type deliverableTypeInput{
        orderByClause:String
        distinct:Boolean
        oredCriteria:[Criteria]
    }

    type employmentKey{
        partyIdFrom:String!
        roleTypeIdFrom:String!
        partyIdTo:String!
        roleTypeIdTo:String!
        fromDate:data!
    }
}